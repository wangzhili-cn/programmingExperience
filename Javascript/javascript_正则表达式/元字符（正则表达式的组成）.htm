<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>元字符-字符类</title>
    <script type="text/javascript">
       //    /[a-z]/g

        //      正则表达式由两种基本字符类型组成
        // 1.原义文本字符：代表它原来含义的字符 例如：abc、123
        // 2.元字符：在正则表达式中有特殊意义的非字母字符 例如：\b表示匹配单词边界，而非\b
        // 在正则表达式中具体特殊含义的字符：* + ? $ ^ . \ () {} []
        //元字符：
        // \t:水平制表符；
        // \v:垂直制表符；
        // \n:换行符；
        // \r:回车符；
        // \0:空字符；
        // \f:换页符；
        // \cX:与X对应的控制字符



        //字符类
        //取一类字符 [abc] 取abc []元字符或者
        //^反向类 [^abc

        //范围类
        //[a-z] 范围小写字母 a到z的任意字符 闭区间包含a和z本身
        //可以连写[a-zA-Z]
        //横线 在范围里面如a-z就是范围的用途，单表示横线则用单横线即可 [a-z-]匹配到横线

        //js预定义类和边界

        //量词

        //默认贪婪模式，？非贪婪模式

        //分组 Byron{3} 实际情况是指n匹配三次 ()
        //用小括号可以达到让Byron匹配三次的情况

        //或 |
    </script>
</head>
<body>
</body>
</html>
